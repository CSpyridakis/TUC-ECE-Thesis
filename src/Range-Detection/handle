#!/bin/bash
##################################################################################################
#
#   Author : Spyridakis Christos
#   Created Date : 3/7/2021
#   Last Updated : 4/7/2021
#   Email : spyridakischristos@gmail.com
#
#   Description : Handle OpenCV project actions like Clean, Build and Run 
#
##################################################################################################

# TODO: If you need to work on a different project you may want to rename executable's name
EXEC_NAME="EstimateBallRange"       

all(){
    clean
    build
    run
}

build(){
    echo "Build Project..."

    # Check that executable's name is not empty
    if [ -z ${EXEC_NAME} ]; then
        echo "Please give name for executable"    
        exit 0
    fi 
    
    createCMakeList

    cmake .
    make
}

clean(){
    echo "Clean Project.."
    rm -rf CMakeFiles cmake_install.cmake CMakeCache.txt ${EXEC_NAME} Makefile
}

deepClean(){
    echo "Deep Clean Project.."
    clean
    read -p 'Do you want to delete CMakeLists.txt? (y/n): ' deleteAll
    if [ $deleteAll == "y" ]; then 
        rm -rf CMakeLists.txt
    fi 
}

createCMakeList(){
    # Check if CMakeLists.txt exists or create a basic template of it
    if [ ! -f ./CMakeLists.txt ]; then
        echo " cmake_minimum_required(VERSION 2.8)
        project( ${EXEC_NAME} )
        find_package( OpenCV REQUIRED )
        include_directories( \${OpenCV_INCLUDE_DIRS} )
        set(FilesToInclude 
            src/main.cpp
        )
        add_executable(\${PROJECT_NAME} \${FilesToInclude})
        target_link_libraries( \${PROJECT_NAME} \${OpenCV_LIBS} )" | tr -s ' ' | cut -d' ' -f2- > CMakeLists.txt
    fi
}

help(){
    echo "Usage: `basename ${0}` <OPTION>"
    echo 
    echo "Manipulate build and run of the Project"
    echo 
    echo "Options:"
    echo "  -a                Clean previous binaries, build project and run"
    echo "  -b                Build Project"
    echo "  -c                Clean binaries"
    echo "  -d                Deep Clean. Actually clean binaries + CMakeLists.txt file "
    echo "                    (don't worry, just run `basename ${0}` -b and it will be created automatically)"
    echo "  -h                Print this help menu and exit"
    echo "  -l                Create CMakeLists.txt template file"   
    echo "  -r                Run executable"
    echo 
    echo "Examples:"
    echo "   `basename ${0}` -a"
}

run(){
    echo "Run Project..."
    bash -c "./${EXEC_NAME}"
}

while getopts ":abcdhlr" opt ; do
    case $opt in
        a)      all             ; exit 0   ;; 
        b)      build           ; exit 0   ;;  
        c)      clean           ; exit 0   ;; 
        d)      deepClean       ; exit 0   ;;
        h)      help            ; exit 0   ;;
        l)      createCMakeList ; exit 0   ;;
        r)      run             ; exit 0   ;;
        :)      QUIET=${FALSE} ; echo "Missing argument for -$OPTARG option! Execute: \$ ${0} -h, in order to see properly usage." ; exit 1  ;;
        \?)     QUIET=${FALSE} ; echo "Invalid option: -$OPTARG. Execute: \$ ${0} -h, in order to see properly usage."             ; exit 2  ;; 
    esac
done