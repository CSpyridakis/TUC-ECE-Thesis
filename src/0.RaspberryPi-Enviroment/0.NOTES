
------------------------------------------------------------------------------------------
 ____                 _                            ____ ___ 
|  _ \ __ _ ___ _ __ | |__   ___ _ __ _ __ _   _  |  _ \_ _|
| |_) / _` / __| '_ \| '_ \ / _ \ '__| '__| | | | | |_) | | 
|  _ < (_| \__ \ |_) | |_) |  __/ |  | |  | |_| | |  __/| | 
|_| \_\__,_|___/ .__/|_.__/ \___|_|  |_|   \__, | |_|  |___|
               |_|                         |___/            
------------------------------------------------------------------------------------------

# Last update: 9/5/2021
# Raspberry Pi 4 B - RAM 8gb used with  wlan0:    MAC: 00:0b:81:xx:xx:xx    (USB Dongle)
                                        wlan1:    MAC: e4:5f:01:xx:xx:xx
                                        eth0:     MAC: e4:5f:01:xx:xx:xx
# pi:tucthesispass

# Interfaces:
# I2C enabled
# SPI enabled
# Serial enabled
# Remote GPIO enabled

--------------------------------------------------------------------
 ___                       ___                  _              _ 
|_ _|_ __  __ _ __ _ ___  |   \ _____ __ ___ _ | |___  __ _ __| |
 | || '  \/ _` / _` / -_) | |) / _ \ V  V / ' \| / _ \/ _` / _` |
|___|_|_|_\__,_\__, \___| |___/\___/\_/\_/|_||_|_\___/\__,_\__,_|
               |___/   
--------------------------------------------------------------------
* Download Raspberry PI OS Buster
March 4th 2021
Kernel version: 5.10
Size: 442MB
https://www.raspberrypi.org/software/operating-systems/#raspberry-pi-os-32-bit



--------------------------------------------------------------------
 ___           _        _    _       ___ ___  
| _ ) ___  ___| |_ __ _| |__| |___  / __|   \ 
| _ \/ _ \/ _ \  _/ _` | '_ \ / -_) \__ \ |) |
|___/\___/\___/\__\__,_|_.__/_\___| |___/___/ 
--------------------------------------------------------------------                                              
* Create bootable SD card (32Gb in this case)
```
sudo dd of=image.img if=/dev/drive bs=4M conv=fsync status=progress
```


-------------------------------------------------------------------- 
__      _____ ___ ___     _     ___ ___ _  _ 
\ \    / /_ _| __|_ _|  _| |_  / __/ __| || |
 \ \/\/ / | || _| | |  |_   _| \__ \__ \ __ |
  \_/\_/ |___|_| |___|   |_|   |___/___/_||_|
-------------------------------------------------------------------- 

* Create SSH (empty) and wpa_supplicant.conf files on boot partition

wpa_supplicant.conf
```
country=us
update_config=1
ctrl_interface=/var/run/wpa_supplicant

network={
 scan_ssid=1
 ssid="MyNetworkSSID"
 psk="Pa55w0rd1234"
}
```

-------------------------------------------------------------------- 
 _   _          _      _       
| | | |_ __  __| |__ _| |_ ___ 
| |_| | '_ \/ _` / _` |  _/ -_)
 \___/| .__/\__,_\__,_|\__\___|
      |_|                 
--------------------------------------------------------------------     
* Update
```
sudo apt-get update 
sudo apt-get upgrade
```


--------------------------------------------------------------------     
 ___                  
/ __|_ __ ____ _ _ __ 
\__ \ V  V / _` | '_ \
|___/\_/\_/\__,_| .__/
                |_|  
--------------------------------------------------------------------     
* Increase swap by updating the below file
/etc/dphys-swapfile
```
CONF_SWAPSIZE=1024
```
Then reboot



-------------------------------------------------------------------- 
 ___  ___  ___    ___         _        _ _      _   _          
| _ \/ _ \/ __|  |_ _|_ _  __| |_ __ _| | |__ _| |_(_)___ _ _  
|   / (_) \__ \   | || ' \(_-<  _/ _` | | / _` |  _| / _ \ ' \ 
|_|_\\___/|___/  |___|_||_/__/\__\__,_|_|_\__,_|\__|_\___/_||_|
-------------------------------------------------------------------- 
* Install ROS Kinetic
http://wiki.ros.org/ROSberryPi/Installing%20ROS%20Kinetic%20on%20the%20Raspberry%20Pi

```

#1 Setup ROS Repositories (Raspbian Buster - same as Jessie)

sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

#2 Make sure that Debian package index is up-to-date

sudo apt-get update
sudo apt-get upgrade

#3 Install Bootstrap Dependencies

sudo apt-get install -y python-rosdep python-rosinstall-generator python-wstool python-rosinstall build-essential cmake

#4 Initializing rosdep

sudo rosdep init
rosdep update

# ----------------
# Installation
# ----------------

#5 Create a catkin Workspace

mkdir -p ~/ros_catkin_ws
cd ~/ros_catkin_ws

#6  Fetch the core packages so we can build them - OS-Comm: (recommended) ROS package, build, and communication libraries. No GUI tools

rosinstall_generator ros_comm --rosdistro kinetic --deps --wet-only --tar > kinetic-ros_comm-wet.rosinstall
wstool init src kinetic-ros_comm-wet.rosinstall

#7 Resolve Dependencies (Unavailable Dependencies)
mkdir -p ~/ros_catkin_ws/external_src
cd ~/ros_catkin_ws/external_src
wget http://sourceforge.net/projects/assimp/files/assimp-3.1/assimp-3.1.1_no_test_models.zip/download -O assimp-3.1.1_no_test_models.zip
unzip assimp-3.1.1_no_test_models.zip
cd assimp-3.1.1
cmake .
make
sudo make install

#8 Resolving Dependencies with rosdep
cd ~/ros_catkin_ws
rosdep install -y --from-paths src --ignore-src --rosdistro kinetic -r --os=debian:buster

#9 
sudo apt remove libboost1.67-dev
sudo apt autoremove
sudo apt install -y libboost1.58-dev libboost1.58-all-dev
sudo apt install -y g++-5 gcc-5
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 20
sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
sudo update-alternatives --set cc /usr/bin/gcc
sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
sudo update-alternatives --set c++ /usr/bin/g++
sudo apt install -y python-rosdep python-rosinstall-generator python-wstool python-rosinstall build-essential cmake

sudo ./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/kinetic

# If there is an error with empy
# sudo cp /usr/bin/empy3 /usr/bin/empy
# sudo chmod +x /usr/bin/empy


#10 Source the new Installation
source /opt/ros/kinetic/setup.bash
#Or source for every shell
echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc


```


-------------------------------------------------------------------- 
   _                      ___     _     _   
  /_\  __ __ ___ ______  | _ \___(_)_ _| |_ 
 / _ \/ _/ _/ -_|_-<_-<  |  _/ _ \ | ' \  _|
/_/ \_\__\__\___/__/__/  |_| \___/_|_||_\__|
-------------------------------------------------------------------- 
* Install access point
```
sudo apt install hostapd
sudo systemctl unmask hostapd
sudo systemctl enable hostapd



```